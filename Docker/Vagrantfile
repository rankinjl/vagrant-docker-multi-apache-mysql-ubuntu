# -*- mode: ruby -*-
# vi: set ft=ruby :
# Interacting Docker Containers in Linux edited by Jessica Rankins 7/24/2017


#****************************************
#
# Must run "vagrant docker-exec WebContainer -- sudo service apache2 restart"
#    for apache server to work and 
#	 "vagrant docker-exec DBContainer -- sudo service mysql restart"
#	 for mysql to work after vagrant up
#
#****************************************


  # All Vagrant configuration is done below. The "2" in Vagrant.configure
  # is the configuration version.
Vagrant.configure("2") do |config|
    
  # Configure the Web Server
  config.vm.define "WebContainer" do |web|
    web.vm.synced_folder "./public-html/", "/var/www/html"
    web.vm.provider :docker do |d|
      # Can specify an image or a Dockerfile: 
      d.build_dir = "."
	  #d.dockerfile = "WebDockerfile"
      d.build_args = [ "-t", "mywebimage" ]
      d.create_args = [ "-i", "-t", "--network=my-bridge-network", "--ip=172.18.0.2" ]
      d.has_ssh = false
      d.ports = [ "8080:80" ]
      d.name = "webcontainer"
	  #d.volumes = [ "/public-html:/var/www/html" ]
	end
    # After vagrant up, should see WebContainer's web page in browser at 127.0.0.1:8080
  end    # End WebContainer config


  # Configure the Database
  config.vm.define "DBContainer" do |db|
    db.vm.provider :docker do |d|
      # Can specify an image or a Dockerfile: 
      d.build_dir = "."
	  d.dockerfile = "DBDockerfile"
      d.build_args = [ "-t", "mydbimage" ]
      d.create_args = [ "-i", "-t", "--network=my-bridge-network", "--ip=172.18.0.3" ]
	  d.ports = [ "6603:3306" ]
      d.has_ssh = false
      d.name = "dbcontainer"
    end
  end    # End DBContainer config
  
end    # End configuring